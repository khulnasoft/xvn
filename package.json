{
  "name": "xvn",
  "version": "0.1.1",
  "author": "KhulnaSoft Ltd. <support@khulnasoft.com> (http://khulnasoft.com)",
  "bin": {
    "xvn": "./bin/xvn"
  },
  "devDependencies": {
    "@hono-rate-limiter/cloudflare": "^0.2.1",
    "@scalar/hono-api-reference": "^0.5.158",
    "get-npm-tarball-url": "^2.1.0",
    "hono": "^4.5.5",
    "hono-rate-limiter": "^0.4.0",
    "js-yaml": "^4.1.0",
    "libnpmpack": "^9.0.0",
    "npm-registry-fetch": "^18.0.2",
    "prettier": "^3.3.3",
    "semver": "^7.6.3",
    "ssri": "^12.0.0",
    "streaming-tarball": "^1.0.3",
    "synopkg": "^13.0.3",
    "uuid": "^11.1.0",
    "validate-npm-package-name": "^6.0.0",
    "wrangler": "^3.111.0"
  },
  "devEngines": {
    "runtime": {
      "name": "node",
      "onFail": "warn"
    },
    "packageManager": {
      "name": "npm",
      "onFail": "warn"
    }
  },
  "engines": {
    "node": ">=22.11.0",
    "npm": ">=10.9.0"
  },
  "license": "FSL-1.1-MIT",
  "peerDependencies": {
    "wrangler": "^3.111.0"
  },
  "repository": "khulnasoft/xvn.git",
  "scripts": {
    "build": "NODE_NO_WARNINGS=1 node ./scripts/build.mjs",
    "bundle": "wrangler deploy --dry-run --outdir dist",
    "format": "synopkg fix-mismatches --types 'prod,dev' || true && synopkg set-semver-ranges",
    "deploy": "wrangler deploy",
    "dev": "wrangler dev --local --persist-to local-store --experimental-json-config",
    "dist": "wrangler dev ./dist/index.js --local --persist-to local-store --experimental-json-config",
    "drop": "wrangler d1 execute xvn_local_database --command 'DROP TABLE IF EXISTS packages;DROP TABLE IF EXISTS tokens;DROP TABLE IF EXISTS versions;' --local --persist-to local-store --experimental-json-config && rm -rf local-store && rm -rf .wrangler",
    "lint": "prettier .",
    "migrate": "wrangler d1 migrations apply xvn_local_database  --local --persist-to local-store --experimental-json-config",
    "setup": "wrangler d1 execute xvn_local_database --command \"CREATE TABLE IF NOT EXISTS packages ('name' TEXT PRIMARY KEY, tags JSON); CREATE TABLE IF NOT EXISTS tokens (token TEXT PRIMARY KEY, uuid TEXT, scope JSON); CREATE TABLE IF NOT EXISTS versions (spec TEXT PRIMARY KEY, manifest JSON, published_at TEXT); INSERT OR REPLACE INTO tokens (token, uuid, scope) VALUES ('xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx', 'admin', '[ { \\\"values\\\": [\\\"*\\\"], \\\"types\\\": { \\\"pkg\\\": { \\\"read\\\": true, \\\"write\\\": true } } }, { \\\"values\\\": [\\\"*\\\"], \\\"types\\\": { \\\"user\\\": { \\\"read\\\": true, \\\"write\\\": true } } } ]');\" --local --persist-to local-store --experimental-json-config"
  }
}
